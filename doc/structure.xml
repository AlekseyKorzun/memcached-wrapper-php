<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a13" title="">
  <file path="Wrapper.php" hash="6de39fc30e5c71a0ec379bfe8c7f681e" package="Default">
    <class final="false" abstract="false" namespace="Memcached" line="22" package="Library\Cache">
      <extends/>
      <name>Wrapper</name>
      <full_name>\Memcached\Wrapper</full_name>
      <docblock line="8">
        <description>Wrapper for Memcached with local storage support</description>
        <long-description></long-description>
        <tag line="8" name="throws" description="" type="\Exception">
          <type by_reference="false">\Exception</type>
        </tag>
        <tag line="8" name="package" description="Library"/>
        <tag line="8" name="subpackage" description="Cache"/>
        <tag line="8" name="see" description="\Memcached\http://pecl.php.net/package/memcached" refers="\Memcached\http://pecl.php.net/package/memcached"/>
        <tag line="8" name="see" description="\Memcached\http://pecl.php.net/package/igbinary" refers="\Memcached\http://pecl.php.net/package/igbinary"/>
        <tag line="8" name="author" description="Aleksey Korzun &lt;al.ko@webfoundation.net&gt;"/>
        <tag line="8" name="version" description="0.2"/>
        <tag line="8" name="license" description="MIT"/>
        <tag line="8" name="link" description="http://www.webfoundation.net" link="http://www.webfoundation.net"/>
        <tag line="8" name="link" description="http://www.alekseykorzun.com" link="http://www.alekseykorzun.com"/>
      </docblock>
      <constant namespace="Memcached" line="31" package="Library\Cache">
        <name>DELAY</name>
        <full_name>DELAY</full_name>
        <value>30</value>
        <docblock line="24">
          <description>Dog-pile prevention delay in seconds, adjust if you have a constant miss
of cache after expiration because un-cached call takes more then specified
delay</description>
          <long-description></long-description>
          <tag line="24" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="Memcached" line="38" package="Library\Cache">
        <name>DEFAULT_TTL</name>
        <full_name>DEFAULT_TTL</full_name>
        <value>3600</value>
        <docblock line="33">
          <description>Default life time of all caches wrapper creates in seconds</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="Memcached" line="46" package="Library\Cache">
        <name>EXTENDED_TTL</name>
        <full_name>EXTENDED_TTL</full_name>
        <value>300</value>
        <docblock line="40">
          <description>Parent expiration padding (so internal cache stamp does not expire before
the actual cache) in seconds</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="53" namespace="Memcached" package="Default">
        <name>$memcached</name>
        <default></default>
        <docblock line="48">
          <description>Instance of Memcached</description>
          <long-description></long-description>
          <tag line="48" name="var" description="" type="\Memcached">
            <type by_reference="false">\Memcached</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="Memcached" package="Default">
        <name>$storage</name>
        <default>array()</default>
        <docblock line="55">
          <description>Local storage</description>
          <long-description></long-description>
          <tag line="55" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="Memcached" package="Default">
        <name>$isStorageEnabled</name>
        <default>true</default>
        <docblock line="62">
          <description>Current setting for local storage</description>
          <long-description></long-description>
          <tag line="62" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="Memcached" package="Default">
        <name>$isResourceExpired</name>
        <default>false</default>
        <docblock line="69">
          <description>Indicates that current look-up will expire shortly (dog-pile)</description>
          <long-description></long-description>
          <tag line="69" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" namespace="Memcached" package="Default">
        <name>$isResourceInvalid</name>
        <default>false</default>
        <docblock line="76">
          <description>Marks current request as invalid (not-found, etc)</description>
          <long-description></long-description>
          <tag line="76" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="Memcached" package="Default">
        <name>$isActive</name>
        <default>true</default>
        <docblock line="83">
          <description>Cache activation switch</description>
          <long-description></long-description>
          <tag line="83" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="110" package="Library\Cache">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="90">
          <description>Class initializer, creates a new singleton instance of Memcached
with optimized configuration</description>
          <long-description></long-description>
          <tag line="90" name="throws" description="we want to bail if Memcached extension is not loaded or&#10;if passed server list is invalid" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="90" name="param" description="create an instance of cache client with a specfic pool" type="string" variable="$pool">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="a list of Memcached servers we will be using, each entry&#10;in servers is supposed to be an array containing hostname, port, and&#10;optionally, weight of the server&#10;Example:&#10;   $servers = array(&#10;       array('mem1.domain.com', 11211, 33),&#10;       array('mem2.domain.com', 11211, 67)&#10; );&#10;See: http://www.php.net/manual/en/memcached.addservers.php" type="mixed[]" variable="$servers">
            <type by_reference="false">mixed[]</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$pool</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="110">
          <name>$servers</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="152" package="Library\Cache">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="146">
          <description>Delete key(s) from cache and local storage</description>
          <long-description></long-description>
          <tag line="146" name="param" description="array of keys to delete or a single key" type="string[]|string" variable="$keys">
            <type by_reference="false">string[]</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="returns false if it failed to delete any of the keys" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="191" package="Library\Cache">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="182">
          <description>Add a new cached record using passed resource and key association</description>
          <long-description></long-description>
          <tag line="182" name="throws" description="if the key is over 250 bytes" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="182" name="param" description="key to store passed resource under" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="resource you want to cache" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="182" name="param" description="when should this key expire in seconds" type="int" variable="$ttl">
            <type by_reference="false">int</type>
          </tag>
          <tag line="182" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$ttl</name>
          <default>self::DEFAULT_TTL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="229" package="Library\Cache">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="217">
          <description>Retrieve data based on provided key from cache pool, this method
will call either getArray or getSimple depending on amount of keys
requested.</description>
          <long-description></long-description>
          <tag line="217" name="param" description="an array of keys or a single key to look-up from cache" type="string[]|string" variable="$keys">
            <type by_reference="false">string[]</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="where to store retrieved resource" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="217" name="param" description="if you wish to remove key from pool after retrieving resource&#10;associated with this you can pass this as true" type="bool" variable="$purge">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="217" name="return" description="returns true on a successful request, false on a failure or forced&#10;expiration" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$purge</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Memcached" line="278" package="Library\Cache">
        <name>getArray</name>
        <full_name>getArray</full_name>
        <docblock line="271">
          <description>Retrieve multiple resources from cache pool and/or local storage</description>
          <long-description></long-description>
          <tag line="271" name="param" description="array of keys to look-up from cache" type="string[]" variable="$keys">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="271" name="return" description="returns array of retrieved resources or false&#10;if look up fails" type="mixed[]|bool">
            <type by_reference="false">mixed[]</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Memcached" line="325" package="Library\Cache">
        <name>getSimple</name>
        <full_name>getSimple</full_name>
        <docblock line="319">
          <description>Retrieve single resource from cache pool / local storage</description>
          <long-description></long-description>
          <tag line="319" name="param" description="key to look-up from cache" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="returns cached resource or false on failure" type="mixed|bool">
            <type by_reference="false">mixed</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="325">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Memcached" line="357" package="Library\Cache">
        <name>unwrap</name>
        <full_name>unwrap</full_name>
        <docblock line="347">
          <description>Get requested data back into memory while setting a delayed cache entry
if data is expiring soon</description>
          <long-description></long-description>
          <tag line="347" name="see" description="\Memcached\http://highscalability.com/strategy-break-memcache-dog-pile" refers="\Memcached\http://highscalability.com/strategy-break-memcache-dog-pile"/>
          <tag line="347" name="param" description="key that you are retrieving" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="param" description="packed data that we got back from cache pool" type="mixed[]" variable="$data">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="347" name="return" description="returns cached resource or false if invalid data was&#10;passed for unwrapping" type="mixed|bool">
            <type by_reference="false">mixed</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="357">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Memcached" line="388" package="Library\Cache">
        <name>wrap</name>
        <full_name>wrap</full_name>
        <docblock line="380">
          <description>Wrap new cached resource into an array containing TTL stamp</description>
          <long-description></long-description>
          <tag line="380" name="see" description="\Memcached\http://highscalability.com/strategy-break-memcache-dog-pile" refers="\Memcached\http://highscalability.com/strategy-break-memcache-dog-pile"/>
          <tag line="380" name="param" description="resource that is getting cached" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="380" name="param" description="internal extended expiration" type="int" variable="$ttl">
            <type by_reference="false">int</type>
          </tag>
          <tag line="380" name="return" description="returns packed resource with TTL stamp to store in cache" type="mixed[]">
            <type by_reference="false">mixed[]</type>
          </tag>
        </docblock>
        <argument line="388">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
        <argument line="388">
          <name>$ttl</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Memcached" line="407" package="Library\Cache">
        <name>store</name>
        <full_name>store</full_name>
        <docblock line="400">
          <description>Store data locally</description>
          <long-description></long-description>
          <tag line="400" name="param" description="key to save resource under" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="400" name="param" description="what you are storing in cache" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="400" name="return" description="resource that we attempted to store" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="407">
          <name>$resource</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="421" package="Library\Cache">
        <name>isStorageEnabled</name>
        <full_name>isStorageEnabled</full_name>
        <docblock line="416">
          <description>Checks if local storage is enabled</description>
          <long-description></long-description>
          <tag line="416" name="return" description="returns true if local storage is enabled false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="432" package="Library\Cache">
        <name>isStored</name>
        <full_name>isStored</full_name>
        <docblock line="426">
          <description>Check if passed key is stored using local store</description>
          <long-description></long-description>
          <tag line="426" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="426" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="432">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="439" package="Library\Cache">
        <name>deactivate</name>
        <full_name>deactivate</full_name>
        <docblock line="436">
          <description>Deactivate caching</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="447" package="Library\Cache">
        <name>activate</name>
        <full_name>activate</full_name>
        <docblock line="444">
          <description>Activate caching</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="457" package="Library\Cache">
        <name>isActive</name>
        <full_name>isActive</full_name>
        <docblock line="452">
          <description>Check if caching is currently active</description>
          <long-description></long-description>
          <tag line="452" name="return" description="returns true if caching is active otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="468" package="Library\Cache">
        <name>validateServers</name>
        <full_name>validateServers</full_name>
        <docblock line="462">
          <description>Validate array of cache servers that should be loaded to Memcached extension</description>
          <long-description></long-description>
          <tag line="462" name="throws" description="if we detect something out of specification" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="462" name="param" description="a list of Memcached servers we will be using" type="mixed[]" variable="$servers">
            <type by_reference="false">mixed[]</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$servers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="503" package="Library\Cache">
        <name>instance</name>
        <full_name>instance</full_name>
        <docblock line="498">
          <description>Retrieve instance of Memcached client</description>
          <long-description></long-description>
          <tag line="498" name="return" description="" type="\Memcached">
            <type by_reference="false">\Memcached</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Memcached" line="515" package="Library\Cache">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="507">
          <description>Pass all method calls directly to instance of Memcached</description>
          <long-description></long-description>
          <tag line="507" name="param" description="method that was invoked" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="param" description="arguments that were passed to invoked method" type="mixed[]" variable="$arguments">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="507" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="515">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="515">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Wrapper.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Library" full_name="Library">
    <package name="Cache" full_name="Library\Cache"/>
  </package>
  <namespace name="Memcached" full_name="Memcached"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
